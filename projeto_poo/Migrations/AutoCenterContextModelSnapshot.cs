// <auto-generated />
using System;
using AutoCenter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoCenter.Migrations
{
    [DbContext(typeof(AutoCenterContext))]
    partial class AutoCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutoCenter.Model.Caixa", b =>
                {
                    b.Property<int>("CaixaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CaixaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("tb_caixa");
                });

            modelBuilder.Entity("AutoCenter.Model.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf_Cnpj")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("tb_cliente");
                });

            modelBuilder.Entity("AutoCenter.Model.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("EmpresaId");

                    b.ToTable("tb_empresa");
                });

            modelBuilder.Entity("AutoCenter.Model.Gerente", b =>
                {
                    b.Property<int>("GerenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GerenteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("tb_gerente");
                });

            modelBuilder.Entity("AutoCenter.Model.OrdemDeServico", b =>
                {
                    b.Property<int>("OrdemDeServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("HorarioDeEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TipoDeServico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("OrdemDeServicoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VendedorId");

                    b.ToTable("tb_ordemdeservico");
                });

            modelBuilder.Entity("AutoCenter.Model.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CustoMedio")
                        .HasColumnType("double");

                    b.Property<double>("CustoUltimaEntrada")
                        .HasColumnType("double");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double");

                    b.HasKey("ProdutoId");

                    b.ToTable("tb_produto");
                });

            modelBuilder.Entity("AutoCenter.Model.ProdutoOrdemDeServico", b =>
                {
                    b.Property<int>("ProdutoOrdemDeServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrdemDeServicoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double");

                    b.HasKey("ProdutoOrdemDeServicoId");

                    b.HasIndex("OrdemDeServicoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tb_produto_ordemdeservico");
                });

            modelBuilder.Entity("AutoCenter.Model.ProdutoVenda", b =>
                {
                    b.Property<int>("ProdutoVendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoVendaId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("tb_produto_venda");
                });

            modelBuilder.Entity("AutoCenter.Model.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.HasKey("VeiculoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("tb_veiculo");
                });

            modelBuilder.Entity("AutoCenter.Model.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("HorioRealizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("VendaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VendedorId");

                    b.ToTable("tb_venda");
                });

            modelBuilder.Entity("AutoCenter.Model.Vendedor", b =>
                {
                    b.Property<int>("VendedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VendedorId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("tb_vendedor");
                });

            modelBuilder.Entity("AutoCenter.Model.Caixa", b =>
                {
                    b.HasOne("AutoCenter.Model.Empresa", "Empresa")
                        .WithMany("Caixas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoCenter.Model.Gerente", b =>
                {
                    b.HasOne("AutoCenter.Model.Empresa", "Empresa")
                        .WithMany("Gerentes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoCenter.Model.OrdemDeServico", b =>
                {
                    b.HasOne("AutoCenter.Model.Cliente", "Cliente")
                        .WithMany("OrdensDeServico")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Model.Vendedor", "Vendedor")
                        .WithMany("OrdensDeServico")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("AutoCenter.Model.ProdutoOrdemDeServico", b =>
                {
                    b.HasOne("AutoCenter.Model.OrdemDeServico", "OrdemDeServico")
                        .WithMany("ProdutosUtilizados")
                        .HasForeignKey("OrdemDeServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Model.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeServico");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("AutoCenter.Model.ProdutoVenda", b =>
                {
                    b.HasOne("AutoCenter.Model.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Model.Venda", "Venda")
                        .WithMany("ProdutosVendidos")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("AutoCenter.Model.Veiculo", b =>
                {
                    b.HasOne("AutoCenter.Model.Cliente", "Cliente")
                        .WithMany("Veiculos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AutoCenter.Model.Venda", b =>
                {
                    b.HasOne("AutoCenter.Model.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Model.Vendedor", "Vendedor")
                        .WithMany("Vendas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("AutoCenter.Model.Vendedor", b =>
                {
                    b.HasOne("AutoCenter.Model.Empresa", "Empresa")
                        .WithMany("Vendedores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoCenter.Model.Cliente", b =>
                {
                    b.Navigation("OrdensDeServico");

                    b.Navigation("Veiculos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("AutoCenter.Model.Empresa", b =>
                {
                    b.Navigation("Caixas");

                    b.Navigation("Gerentes");

                    b.Navigation("Vendedores");
                });

            modelBuilder.Entity("AutoCenter.Model.OrdemDeServico", b =>
                {
                    b.Navigation("ProdutosUtilizados");
                });

            modelBuilder.Entity("AutoCenter.Model.Venda", b =>
                {
                    b.Navigation("ProdutosVendidos");
                });

            modelBuilder.Entity("AutoCenter.Model.Vendedor", b =>
                {
                    b.Navigation("OrdensDeServico");

                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
